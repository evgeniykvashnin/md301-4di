ARM GAS  /tmp/ccdp43tV.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB43:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  /tmp/ccdp43tV.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** UART_HandleTypeDef huart1;
  46:Src/main.c    **** UART_HandleTypeDef huart2;
  47:Src/main.c    **** HAL_StatusTypeDef state;
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    ****   uint8_t received[4];
  50:Src/main.c    ****   uint8_t status=0;
  51:Src/main.c    ****   uint8_t str[]="usrt";
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** static void MX_USART1_UART_Init(void);
  58:Src/main.c    **** static void MX_USART2_UART_Init(void);
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  66:Src/main.c    **** {
  67:Src/main.c    ****   /* Prevent unused argument(s) compilation warning */
  68:Src/main.c    ****     if(huart==&huart1){
  69:Src/main.c    ****       status=1;
  70:Src/main.c    ****       HAL_UART_Receive_IT(&huart1, received, sizeof(received));
  71:Src/main.c    ****     }
  72:Src/main.c    ****   /* NOTE : This function should not be modified, when the callback is needed,
  73:Src/main.c    ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
  74:Src/main.c    ****    */
  75:Src/main.c    **** }
  76:Src/main.c    **** 
  77:Src/main.c    **** static char header[] = "PA4  PA5  PA6  PA7\r\n";
  78:Src/main.c    **** static char headerb[] = "PB12 PB13 PB14 PB15\r\n";
  79:Src/main.c    **** 
  80:Src/main.c    **** static char open[]="o    ";
  81:Src/main.c    **** static char close[]="c    ";
  82:Src/main.c    **** void test(){
  83:Src/main.c    ****   uint16_t gpionum=0x0010U;
  84:Src/main.c    ****     HAL_UART_Transmit(&huart1,(uint8_t*)header,sizeof(header),30);
  85:Src/main.c    ****     for (int i = 0; i < 4; i++)
  86:Src/main.c    ****      {
  87:Src/main.c    ****         if(HAL_GPIO_ReadPin(GPIOA,gpionum)==GPIO_PIN_SET){
  88:Src/main.c    ****           HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
  89:Src/main.c    ****         }else{
  90:Src/main.c    ****           HAL_UART_Transmit(&huart1,(uint8_t*)close,sizeof(close),30);
ARM GAS  /tmp/ccdp43tV.s 			page 3


  91:Src/main.c    ****         }
  92:Src/main.c    ****           gpionum=gpionum*2;
  93:Src/main.c    ****      }
  94:Src/main.c    ****     HAL_UART_Transmit(&huart1,(uint8_t*)"\r\n",2,30);
  95:Src/main.c    ****     HAL_UART_Transmit(&huart1,(uint8_t*)headerb,sizeof(headerb),30);
  96:Src/main.c    ****     gpionum=0x1000U;
  97:Src/main.c    ****      for (int i = 0; i < 4; i++)
  98:Src/main.c    ****      {
  99:Src/main.c    ****         if(HAL_GPIO_ReadPin(GPIOB,gpionum)==GPIO_PIN_SET){
 100:Src/main.c    ****            HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
 101:Src/main.c    ****         }else{
 102:Src/main.c    ****            HAL_UART_Transmit(&huart1,(uint8_t*)close,sizeof(close),30);
 103:Src/main.c    ****          }
 104:Src/main.c    ****           gpionum=gpionum*2;
 105:Src/main.c    ****      }
 106:Src/main.c    ****      HAL_UART_Transmit(&huart1,(uint8_t*)"\r\nGreen: ",9,30);
 107:Src/main.c    ****      if (HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_6)==GPIO_PIN_SET)
 108:Src/main.c    ****      {
 109:Src/main.c    ****        HAL_UART_Transmit(&huart1,(uint8_t*)"on", 2, 30);
 110:Src/main.c    ****      }else{
 111:Src/main.c    ****        HAL_UART_Transmit(&huart1,(uint8_t*)"off", 3, 30);
 112:Src/main.c    ****      }
 113:Src/main.c    ****       HAL_UART_Transmit(&huart1,(uint8_t*)"\r\nRed: ",7,30);
 114:Src/main.c    ****      if (HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_5)==GPIO_PIN_SET)
 115:Src/main.c    ****        {
 116:Src/main.c    ****         HAL_UART_Transmit(&huart1,(uint8_t*)"on", 2, 30);
 117:Src/main.c    ****        }else{
 118:Src/main.c    ****         HAL_UART_Transmit(&huart1,(uint8_t*)"off", 3, 30);
 119:Src/main.c    ****        }
 120:Src/main.c    ****      HAL_UART_Transmit(&huart1,(uint8_t*)"\r\n\n",3,30);
 121:Src/main.c    **** 
 122:Src/main.c    **** }
 123:Src/main.c    **** 
 124:Src/main.c    **** /* USER CODE END 0 */
 125:Src/main.c    **** 
 126:Src/main.c    **** /**
 127:Src/main.c    ****   * @brief  The application entry point.
 128:Src/main.c    ****   * @retval int
 129:Src/main.c    ****   */
 130:Src/main.c    **** int main(void)
 131:Src/main.c    **** {
 132:Src/main.c    ****   /* USER CODE BEGIN 1 */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE END 1 */
 135:Src/main.c    ****   
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 140:Src/main.c    ****   HAL_Init();
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* USER CODE BEGIN Init */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE END Init */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* Configure the system clock */
 147:Src/main.c    ****   SystemClock_Config();
ARM GAS  /tmp/ccdp43tV.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 150:Src/main.c    **** 
 151:Src/main.c    ****   /* USER CODE END SysInit */
 152:Src/main.c    **** 
 153:Src/main.c    ****   /* Initialize all configured peripherals */
 154:Src/main.c    ****   MX_GPIO_Init();
 155:Src/main.c    ****   MX_USART1_UART_Init();
 156:Src/main.c    ****   MX_USART2_UART_Init();
 157:Src/main.c    ****   /* USER CODE BEGIN 2 */
 158:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, received, sizeof(received));
 159:Src/main.c    ****   HAL_NVIC_SetPriority(USART1_IRQn, 0, 1);
 160:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART1_IRQn);
 161:Src/main.c    ****   /* USER CODE END 2 */
 162:Src/main.c    **** 
 163:Src/main.c    ****   /* Infinite loop */
 164:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 165:Src/main.c    ****   while (1)
 166:Src/main.c    ****   {
 167:Src/main.c    ****       if(status==1 && received[0]==116){
 168:Src/main.c    ****         test();
 169:Src/main.c    ****         received[0]=0;
 170:Src/main.c    ****       }
 171:Src/main.c    ****       state=HAL_UART_Transmit(&huart2,(uint8_t*)"test\r\n",6,100);
 172:Src/main.c    ****       if(state==HAL_OK){
 173:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_5);
 174:Src/main.c    ****       }
 175:Src/main.c    ****       HAL_Delay(1000);
 176:Src/main.c    ****     /* USER CODE END WHILE */
 177:Src/main.c    **** 
 178:Src/main.c    ****     /* USER CODE BEGIN 3 */
 179:Src/main.c    ****   }
 180:Src/main.c    ****   /* USER CODE END 3 */
 181:Src/main.c    **** }
 182:Src/main.c    **** 
 183:Src/main.c    **** /**
 184:Src/main.c    ****   * @brief System Clock Configuration
 185:Src/main.c    ****   * @retval None
 186:Src/main.c    ****   */
 187:Src/main.c    **** void SystemClock_Config(void)
 188:Src/main.c    **** {
 189:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 190:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 191:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 192:Src/main.c    **** 
 193:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 194:Src/main.c    ****   */
 195:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 196:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 197:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 199:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     Error_Handler();
 202:Src/main.c    ****   }
 203:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 204:Src/main.c    ****   */
ARM GAS  /tmp/ccdp43tV.s 			page 5


 205:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 206:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 207:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 208:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 209:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 210:Src/main.c    **** 
 211:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 212:Src/main.c    ****   {
 213:Src/main.c    ****     Error_Handler();
 214:Src/main.c    ****   }
 215:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 216:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 217:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 218:Src/main.c    ****   {
 219:Src/main.c    ****     Error_Handler();
 220:Src/main.c    ****   }
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** /**
 224:Src/main.c    ****   * @brief USART1 Initialization Function
 225:Src/main.c    ****   * @param None
 226:Src/main.c    ****   * @retval None
 227:Src/main.c    ****   */
 228:Src/main.c    **** static void MX_USART1_UART_Init(void)
 229:Src/main.c    **** {
 230:Src/main.c    **** 
 231:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 232:Src/main.c    **** 
 233:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 234:Src/main.c    **** 
 235:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 236:Src/main.c    **** 
 237:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 238:Src/main.c    ****   huart1.Instance = USART1;
 239:Src/main.c    ****   huart1.Init.BaudRate = 9600;
 240:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 241:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 242:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 243:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 244:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 245:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 246:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 247:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 248:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 249:Src/main.c    ****   {
 250:Src/main.c    ****     Error_Handler();
 251:Src/main.c    ****   }
 252:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 255:Src/main.c    **** 
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** /**
 259:Src/main.c    ****   * @brief USART2 Initialization Function
 260:Src/main.c    ****   * @param None
 261:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccdp43tV.s 			page 6


 262:Src/main.c    ****   */
 263:Src/main.c    **** static void MX_USART2_UART_Init(void)
 264:Src/main.c    **** {
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 269:Src/main.c    **** 
 270:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 273:Src/main.c    ****   huart2.Instance = USART2;
 274:Src/main.c    ****   huart2.Init.BaudRate = 9600;
 275:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 276:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 277:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 278:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 279:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 280:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 281:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 282:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 283:Src/main.c    ****   if (HAL_RS485Ex_Init(&huart2, UART_DE_POLARITY_HIGH, 0, 0) != HAL_OK)
 284:Src/main.c    ****   {
 285:Src/main.c    ****     Error_Handler();
 286:Src/main.c    ****   }
 287:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 290:Src/main.c    **** 
 291:Src/main.c    **** }
 292:Src/main.c    **** 
 293:Src/main.c    **** /**
 294:Src/main.c    ****   * @brief GPIO Initialization Function
 295:Src/main.c    ****   * @param None
 296:Src/main.c    ****   * @retval None
 297:Src/main.c    ****   */
 298:Src/main.c    **** static void MX_GPIO_Init(void)
 299:Src/main.c    **** {
  26              		.loc 1 299 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 300:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 300 3 view .LVU1
  39              		.loc 1 300 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccdp43tV.s 			page 7


  44              	.LVL0:
 301:Src/main.c    **** 
 302:Src/main.c    ****   /* GPIO Ports Clock Enable */
 303:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  45              		.loc 1 303 3 is_stmt 1 view .LVU3
  46              	.LBB2:
  47              		.loc 1 303 3 view .LVU4
  48              		.loc 1 303 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5969     		ldr	r1, [r3, #20]
  51 0012 8020     		movs	r0, #128
  52 0014 8002     		lsls	r0, r0, #10
  53 0016 0143     		orrs	r1, r0
  54 0018 5961     		str	r1, [r3, #20]
  55              		.loc 1 303 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0240     		ands	r2, r0
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 303 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE2:
 304:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  62              		.loc 1 304 3 view .LVU8
  63              	.LBB3:
  64              		.loc 1 304 3 view .LVU9
  65              		.loc 1 304 3 view .LVU10
  66 0022 5A69     		ldr	r2, [r3, #20]
  67 0024 8021     		movs	r1, #128
  68 0026 C902     		lsls	r1, r1, #11
  69 0028 0A43     		orrs	r2, r1
  70 002a 5A61     		str	r2, [r3, #20]
  71              		.loc 1 304 3 view .LVU11
  72 002c 5B69     		ldr	r3, [r3, #20]
  73 002e 0B40     		ands	r3, r1
  74 0030 0293     		str	r3, [sp, #8]
  75              		.loc 1 304 3 view .LVU12
  76 0032 029B     		ldr	r3, [sp, #8]
  77              	.LBE3:
 305:Src/main.c    **** 
 306:Src/main.c    ****   /*Configure GPIO pin Output Level */
 307:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);
  78              		.loc 1 307 3 view .LVU13
  79 0034 0A4C     		ldr	r4, .L2+4
  80 0036 0022     		movs	r2, #0
  81 0038 6021     		movs	r1, #96
  82 003a 2000     		movs	r0, r4
  83 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL1:
 308:Src/main.c    **** 
 309:Src/main.c    ****   /*Configure GPIO pins : PB5 PB6 */
 310:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
  85              		.loc 1 310 3 view .LVU14
  86              		.loc 1 310 23 is_stmt 0 view .LVU15
  87 0040 6023     		movs	r3, #96
  88 0042 0393     		str	r3, [sp, #12]
 311:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  89              		.loc 1 311 3 is_stmt 1 view .LVU16
ARM GAS  /tmp/ccdp43tV.s 			page 8


  90              		.loc 1 311 24 is_stmt 0 view .LVU17
  91 0044 5F3B     		subs	r3, r3, #95
  92 0046 0493     		str	r3, [sp, #16]
 312:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  93              		.loc 1 312 3 is_stmt 1 view .LVU18
  94              		.loc 1 312 24 is_stmt 0 view .LVU19
  95 0048 0023     		movs	r3, #0
  96 004a 0593     		str	r3, [sp, #20]
 313:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 313 3 is_stmt 1 view .LVU20
  98              		.loc 1 313 25 is_stmt 0 view .LVU21
  99 004c 0693     		str	r3, [sp, #24]
 314:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 100              		.loc 1 314 3 is_stmt 1 view .LVU22
 101 004e 03A9     		add	r1, sp, #12
 102 0050 2000     		movs	r0, r4
 103 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL2:
 315:Src/main.c    **** 
 316:Src/main.c    **** }
 105              		.loc 1 316 1 is_stmt 0 view .LVU23
 106 0056 08B0     		add	sp, sp, #32
 107              		@ sp needed
 108 0058 10BD     		pop	{r4, pc}
 109              	.L3:
 110 005a C046     		.align	2
 111              	.L2:
 112 005c 00100240 		.word	1073876992
 113 0060 00040048 		.word	1207960576
 114              		.cfi_endproc
 115              	.LFE43:
 117              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.code	16
 121              		.thumb_func
 122              		.fpu softvfp
 124              	MX_USART1_UART_Init:
 125              	.LFB41:
 229:Src/main.c    **** 
 126              		.loc 1 229 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 10B5     		push	{r4, lr}
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 238:Src/main.c    ****   huart1.Init.BaudRate = 9600;
 135              		.loc 1 238 3 view .LVU25
 238:Src/main.c    ****   huart1.Init.BaudRate = 9600;
 136              		.loc 1 238 19 is_stmt 0 view .LVU26
 137 0002 0948     		ldr	r0, .L5
 138 0004 094B     		ldr	r3, .L5+4
 139 0006 0360     		str	r3, [r0]
 239:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccdp43tV.s 			page 9


 140              		.loc 1 239 3 is_stmt 1 view .LVU27
 239:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 141              		.loc 1 239 24 is_stmt 0 view .LVU28
 142 0008 9623     		movs	r3, #150
 143 000a 9B01     		lsls	r3, r3, #6
 144 000c 4360     		str	r3, [r0, #4]
 240:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 145              		.loc 1 240 3 is_stmt 1 view .LVU29
 240:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 146              		.loc 1 240 26 is_stmt 0 view .LVU30
 147 000e 0023     		movs	r3, #0
 148 0010 8360     		str	r3, [r0, #8]
 241:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 149              		.loc 1 241 3 is_stmt 1 view .LVU31
 241:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 150              		.loc 1 241 24 is_stmt 0 view .LVU32
 151 0012 C360     		str	r3, [r0, #12]
 242:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 152              		.loc 1 242 3 is_stmt 1 view .LVU33
 242:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 153              		.loc 1 242 22 is_stmt 0 view .LVU34
 154 0014 0361     		str	r3, [r0, #16]
 243:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 155              		.loc 1 243 3 is_stmt 1 view .LVU35
 243:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 156              		.loc 1 243 20 is_stmt 0 view .LVU36
 157 0016 0C22     		movs	r2, #12
 158 0018 4261     		str	r2, [r0, #20]
 244:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 159              		.loc 1 244 3 is_stmt 1 view .LVU37
 244:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 160              		.loc 1 244 25 is_stmt 0 view .LVU38
 161 001a 8361     		str	r3, [r0, #24]
 245:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 162              		.loc 1 245 3 is_stmt 1 view .LVU39
 245:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 163              		.loc 1 245 28 is_stmt 0 view .LVU40
 164 001c C361     		str	r3, [r0, #28]
 246:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 165              		.loc 1 246 3 is_stmt 1 view .LVU41
 246:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 166              		.loc 1 246 30 is_stmt 0 view .LVU42
 167 001e 0362     		str	r3, [r0, #32]
 247:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 168              		.loc 1 247 3 is_stmt 1 view .LVU43
 247:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 169              		.loc 1 247 38 is_stmt 0 view .LVU44
 170 0020 4362     		str	r3, [r0, #36]
 248:Src/main.c    ****   {
 171              		.loc 1 248 3 is_stmt 1 view .LVU45
 248:Src/main.c    ****   {
 172              		.loc 1 248 7 is_stmt 0 view .LVU46
 173 0022 FFF7FEFF 		bl	HAL_UART_Init
 174              	.LVL3:
 256:Src/main.c    **** 
 175              		.loc 1 256 1 view .LVU47
 176              		@ sp needed
ARM GAS  /tmp/ccdp43tV.s 			page 10


 177 0026 10BD     		pop	{r4, pc}
 178              	.L6:
 179              		.align	2
 180              	.L5:
 181 0028 00000000 		.word	huart1
 182 002c 00380140 		.word	1073821696
 183              		.cfi_endproc
 184              	.LFE41:
 186              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.code	16
 190              		.thumb_func
 191              		.fpu softvfp
 193              	MX_USART2_UART_Init:
 194              	.LFB42:
 264:Src/main.c    **** 
 195              		.loc 1 264 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 10B5     		push	{r4, lr}
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 273:Src/main.c    ****   huart2.Init.BaudRate = 9600;
 204              		.loc 1 273 3 view .LVU49
 273:Src/main.c    ****   huart2.Init.BaudRate = 9600;
 205              		.loc 1 273 19 is_stmt 0 view .LVU50
 206 0002 0A48     		ldr	r0, .L8
 207 0004 0A4B     		ldr	r3, .L8+4
 208 0006 0360     		str	r3, [r0]
 274:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 209              		.loc 1 274 3 is_stmt 1 view .LVU51
 274:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 210              		.loc 1 274 24 is_stmt 0 view .LVU52
 211 0008 9623     		movs	r3, #150
 212 000a 9B01     		lsls	r3, r3, #6
 213 000c 4360     		str	r3, [r0, #4]
 275:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 214              		.loc 1 275 3 is_stmt 1 view .LVU53
 275:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 215              		.loc 1 275 26 is_stmt 0 view .LVU54
 216 000e 0023     		movs	r3, #0
 217 0010 8360     		str	r3, [r0, #8]
 276:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 218              		.loc 1 276 3 is_stmt 1 view .LVU55
 276:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 219              		.loc 1 276 24 is_stmt 0 view .LVU56
 220 0012 C360     		str	r3, [r0, #12]
 277:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 221              		.loc 1 277 3 is_stmt 1 view .LVU57
 277:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 222              		.loc 1 277 22 is_stmt 0 view .LVU58
 223 0014 0361     		str	r3, [r0, #16]
 278:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccdp43tV.s 			page 11


 224              		.loc 1 278 3 is_stmt 1 view .LVU59
 278:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 225              		.loc 1 278 20 is_stmt 0 view .LVU60
 226 0016 0C22     		movs	r2, #12
 227 0018 4261     		str	r2, [r0, #20]
 279:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 228              		.loc 1 279 3 is_stmt 1 view .LVU61
 279:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 229              		.loc 1 279 25 is_stmt 0 view .LVU62
 230 001a 8361     		str	r3, [r0, #24]
 280:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 231              		.loc 1 280 3 is_stmt 1 view .LVU63
 280:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 232              		.loc 1 280 28 is_stmt 0 view .LVU64
 233 001c C361     		str	r3, [r0, #28]
 281:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 234              		.loc 1 281 3 is_stmt 1 view .LVU65
 281:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 235              		.loc 1 281 30 is_stmt 0 view .LVU66
 236 001e 0362     		str	r3, [r0, #32]
 282:Src/main.c    ****   if (HAL_RS485Ex_Init(&huart2, UART_DE_POLARITY_HIGH, 0, 0) != HAL_OK)
 237              		.loc 1 282 3 is_stmt 1 view .LVU67
 282:Src/main.c    ****   if (HAL_RS485Ex_Init(&huart2, UART_DE_POLARITY_HIGH, 0, 0) != HAL_OK)
 238              		.loc 1 282 38 is_stmt 0 view .LVU68
 239 0020 4362     		str	r3, [r0, #36]
 283:Src/main.c    ****   {
 240              		.loc 1 283 3 is_stmt 1 view .LVU69
 283:Src/main.c    ****   {
 241              		.loc 1 283 7 is_stmt 0 view .LVU70
 242 0022 0022     		movs	r2, #0
 243 0024 0021     		movs	r1, #0
 244 0026 FFF7FEFF 		bl	HAL_RS485Ex_Init
 245              	.LVL4:
 291:Src/main.c    **** 
 246              		.loc 1 291 1 view .LVU71
 247              		@ sp needed
 248 002a 10BD     		pop	{r4, pc}
 249              	.L9:
 250              		.align	2
 251              	.L8:
 252 002c 00000000 		.word	huart2
 253 0030 00440040 		.word	1073759232
 254              		.cfi_endproc
 255              	.LFE42:
 257              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 258              		.align	1
 259              		.global	HAL_UART_RxCpltCallback
 260              		.syntax unified
 261              		.code	16
 262              		.thumb_func
 263              		.fpu softvfp
 265              	HAL_UART_RxCpltCallback:
 266              	.LVL5:
 267              	.LFB37:
  66:Src/main.c    ****   /* Prevent unused argument(s) compilation warning */
 268              		.loc 1 66 1 is_stmt 1 view -0
 269              		.cfi_startproc
ARM GAS  /tmp/ccdp43tV.s 			page 12


 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
  66:Src/main.c    ****   /* Prevent unused argument(s) compilation warning */
 272              		.loc 1 66 1 is_stmt 0 view .LVU73
 273 0000 10B5     		push	{r4, lr}
 274              	.LCFI4:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 4, -8
 277              		.cfi_offset 14, -4
  68:Src/main.c    ****       status=1;
 278              		.loc 1 68 5 is_stmt 1 view .LVU74
  68:Src/main.c    ****       status=1;
 279              		.loc 1 68 7 is_stmt 0 view .LVU75
 280 0002 064B     		ldr	r3, .L13
 281 0004 9842     		cmp	r0, r3
 282 0006 00D0     		beq	.L12
 283              	.LVL6:
 284              	.L10:
  75:Src/main.c    **** 
 285              		.loc 1 75 1 view .LVU76
 286              		@ sp needed
 287 0008 10BD     		pop	{r4, pc}
 288              	.LVL7:
 289              	.L12:
  69:Src/main.c    ****       HAL_UART_Receive_IT(&huart1, received, sizeof(received));
 290              		.loc 1 69 7 is_stmt 1 view .LVU77
  69:Src/main.c    ****       HAL_UART_Receive_IT(&huart1, received, sizeof(received));
 291              		.loc 1 69 13 is_stmt 0 view .LVU78
 292 000a 054B     		ldr	r3, .L13+4
 293 000c 0122     		movs	r2, #1
 294 000e 1A70     		strb	r2, [r3]
  70:Src/main.c    ****     }
 295              		.loc 1 70 7 is_stmt 1 view .LVU79
 296 0010 0332     		adds	r2, r2, #3
 297 0012 0449     		ldr	r1, .L13+8
 298 0014 0148     		ldr	r0, .L13
 299              	.LVL8:
  70:Src/main.c    ****     }
 300              		.loc 1 70 7 is_stmt 0 view .LVU80
 301 0016 FFF7FEFF 		bl	HAL_UART_Receive_IT
 302              	.LVL9:
  75:Src/main.c    **** 
 303              		.loc 1 75 1 view .LVU81
 304 001a F5E7     		b	.L10
 305              	.L14:
 306              		.align	2
 307              	.L13:
 308 001c 00000000 		.word	huart1
 309 0020 00000000 		.word	.LANCHOR0
 310 0024 00000000 		.word	received
 311              		.cfi_endproc
 312              	.LFE37:
 314              		.section	.text.test,"ax",%progbits
 315              		.align	1
 316              		.global	test
 317              		.syntax unified
 318              		.code	16
ARM GAS  /tmp/ccdp43tV.s 			page 13


 319              		.thumb_func
 320              		.fpu softvfp
 322              	test:
 323              	.LFB38:
  82:Src/main.c    ****   uint16_t gpionum=0x0010U;
 324              		.loc 1 82 12 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 70B5     		push	{r4, r5, r6, lr}
 329              	.LCFI5:
 330              		.cfi_def_cfa_offset 16
 331              		.cfi_offset 4, -16
 332              		.cfi_offset 5, -12
 333              		.cfi_offset 6, -8
 334              		.cfi_offset 14, -4
  83:Src/main.c    ****     HAL_UART_Transmit(&huart1,(uint8_t*)header,sizeof(header),30);
 335              		.loc 1 83 3 view .LVU83
 336              	.LVL10:
  84:Src/main.c    ****     for (int i = 0; i < 4; i++)
 337              		.loc 1 84 5 view .LVU84
 338 0002 1E23     		movs	r3, #30
 339 0004 1522     		movs	r2, #21
 340 0006 4149     		ldr	r1, .L32
 341 0008 4148     		ldr	r0, .L32+4
 342 000a FFF7FEFF 		bl	HAL_UART_Transmit
 343              	.LVL11:
  85:Src/main.c    ****      {
 344              		.loc 1 85 5 view .LVU85
 345              	.LBB4:
  85:Src/main.c    ****      {
 346              		.loc 1 85 10 view .LVU86
  85:Src/main.c    ****      {
 347              		.loc 1 85 14 is_stmt 0 view .LVU87
 348 000e 0025     		movs	r5, #0
 349              	.LBE4:
  83:Src/main.c    ****     HAL_UART_Transmit(&huart1,(uint8_t*)header,sizeof(header),30);
 350              		.loc 1 83 12 view .LVU88
 351 0010 1024     		movs	r4, #16
 352              	.LBB5:
  85:Src/main.c    ****      {
 353              		.loc 1 85 5 view .LVU89
 354 0012 08E0     		b	.L16
 355              	.LVL12:
 356              	.L17:
  90:Src/main.c    ****         }
 357              		.loc 1 90 11 is_stmt 1 view .LVU90
 358 0014 1E23     		movs	r3, #30
 359 0016 0622     		movs	r2, #6
 360 0018 3E49     		ldr	r1, .L32+8
 361 001a 3D48     		ldr	r0, .L32+4
 362 001c FFF7FEFF 		bl	HAL_UART_Transmit
 363              	.LVL13:
 364              	.L18:
  92:Src/main.c    ****      }
 365              		.loc 1 92 11 discriminator 2 view .LVU91
  92:Src/main.c    ****      }
ARM GAS  /tmp/ccdp43tV.s 			page 14


 366              		.loc 1 92 18 is_stmt 0 discriminator 2 view .LVU92
 367 0020 6400     		lsls	r4, r4, #1
 368              	.LVL14:
  92:Src/main.c    ****      }
 369              		.loc 1 92 18 discriminator 2 view .LVU93
 370 0022 A4B2     		uxth	r4, r4
 371              	.LVL15:
  85:Src/main.c    ****      {
 372              		.loc 1 85 29 discriminator 2 view .LVU94
 373 0024 0135     		adds	r5, r5, #1
 374              	.LVL16:
 375              	.L16:
  85:Src/main.c    ****      {
 376              		.loc 1 85 5 discriminator 1 view .LVU95
 377 0026 032D     		cmp	r5, #3
 378 0028 0DDC     		bgt	.L28
  87:Src/main.c    ****           HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
 379              		.loc 1 87 9 is_stmt 1 view .LVU96
  87:Src/main.c    ****           HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
 380              		.loc 1 87 12 is_stmt 0 view .LVU97
 381 002a 9020     		movs	r0, #144
 382 002c 2100     		movs	r1, r4
 383 002e C005     		lsls	r0, r0, #23
 384 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 385              	.LVL17:
  87:Src/main.c    ****           HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
 386              		.loc 1 87 11 view .LVU98
 387 0034 0128     		cmp	r0, #1
 388 0036 EDD1     		bne	.L17
  88:Src/main.c    ****         }else{
 389              		.loc 1 88 11 is_stmt 1 view .LVU99
 390 0038 1E23     		movs	r3, #30
 391 003a 0622     		movs	r2, #6
 392 003c 3649     		ldr	r1, .L32+12
 393 003e 3448     		ldr	r0, .L32+4
 394 0040 FFF7FEFF 		bl	HAL_UART_Transmit
 395              	.LVL18:
 396 0044 ECE7     		b	.L18
 397              	.L28:
 398              	.LBE5:
  94:Src/main.c    ****     HAL_UART_Transmit(&huart1,(uint8_t*)headerb,sizeof(headerb),30);
 399              		.loc 1 94 5 view .LVU100
 400 0046 324C     		ldr	r4, .L32+4
 401              	.LVL19:
  94:Src/main.c    ****     HAL_UART_Transmit(&huart1,(uint8_t*)headerb,sizeof(headerb),30);
 402              		.loc 1 94 5 is_stmt 0 view .LVU101
 403 0048 1E23     		movs	r3, #30
 404 004a 0222     		movs	r2, #2
 405 004c 3349     		ldr	r1, .L32+16
 406 004e 2000     		movs	r0, r4
 407 0050 FFF7FEFF 		bl	HAL_UART_Transmit
 408              	.LVL20:
  95:Src/main.c    ****     gpionum=0x1000U;
 409              		.loc 1 95 5 is_stmt 1 view .LVU102
 410 0054 1E23     		movs	r3, #30
 411 0056 1622     		movs	r2, #22
 412 0058 3149     		ldr	r1, .L32+20
ARM GAS  /tmp/ccdp43tV.s 			page 15


 413 005a 2000     		movs	r0, r4
 414 005c FFF7FEFF 		bl	HAL_UART_Transmit
 415              	.LVL21:
  96:Src/main.c    ****      for (int i = 0; i < 4; i++)
 416              		.loc 1 96 5 view .LVU103
  97:Src/main.c    ****      {
 417              		.loc 1 97 6 view .LVU104
 418              	.LBB6:
  97:Src/main.c    ****      {
 419              		.loc 1 97 11 view .LVU105
  97:Src/main.c    ****      {
 420              		.loc 1 97 15 is_stmt 0 view .LVU106
 421 0060 0025     		movs	r5, #0
 422              	.LVL22:
  97:Src/main.c    ****      {
 423              		.loc 1 97 15 view .LVU107
 424              	.LBE6:
  96:Src/main.c    ****      for (int i = 0; i < 4; i++)
 425              		.loc 1 96 12 view .LVU108
 426 0062 8024     		movs	r4, #128
 427 0064 6401     		lsls	r4, r4, #5
 428              	.LBB7:
  97:Src/main.c    ****      {
 429              		.loc 1 97 6 view .LVU109
 430 0066 08E0     		b	.L20
 431              	.LVL23:
 432              	.L21:
 102:Src/main.c    ****          }
 433              		.loc 1 102 12 is_stmt 1 view .LVU110
 434 0068 1E23     		movs	r3, #30
 435 006a 0622     		movs	r2, #6
 436 006c 2949     		ldr	r1, .L32+8
 437 006e 2848     		ldr	r0, .L32+4
 438 0070 FFF7FEFF 		bl	HAL_UART_Transmit
 439              	.LVL24:
 440              	.L22:
 104:Src/main.c    ****      }
 441              		.loc 1 104 11 discriminator 2 view .LVU111
 104:Src/main.c    ****      }
 442              		.loc 1 104 18 is_stmt 0 discriminator 2 view .LVU112
 443 0074 6400     		lsls	r4, r4, #1
 444              	.LVL25:
 104:Src/main.c    ****      }
 445              		.loc 1 104 18 discriminator 2 view .LVU113
 446 0076 A4B2     		uxth	r4, r4
 447              	.LVL26:
  97:Src/main.c    ****      {
 448              		.loc 1 97 30 discriminator 2 view .LVU114
 449 0078 0135     		adds	r5, r5, #1
 450              	.LVL27:
 451              	.L20:
  97:Src/main.c    ****      {
 452              		.loc 1 97 6 discriminator 1 view .LVU115
 453 007a 032D     		cmp	r5, #3
 454 007c 0CDC     		bgt	.L29
  99:Src/main.c    ****            HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
 455              		.loc 1 99 9 is_stmt 1 view .LVU116
ARM GAS  /tmp/ccdp43tV.s 			page 16


  99:Src/main.c    ****            HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
 456              		.loc 1 99 12 is_stmt 0 view .LVU117
 457 007e 2100     		movs	r1, r4
 458 0080 2848     		ldr	r0, .L32+24
 459 0082 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 460              	.LVL28:
  99:Src/main.c    ****            HAL_UART_Transmit(&huart1,(uint8_t*)open,sizeof(open),30);
 461              		.loc 1 99 11 view .LVU118
 462 0086 0128     		cmp	r0, #1
 463 0088 EED1     		bne	.L21
 100:Src/main.c    ****         }else{
 464              		.loc 1 100 12 is_stmt 1 view .LVU119
 465 008a 1E23     		movs	r3, #30
 466 008c 0622     		movs	r2, #6
 467 008e 2249     		ldr	r1, .L32+12
 468 0090 1F48     		ldr	r0, .L32+4
 469 0092 FFF7FEFF 		bl	HAL_UART_Transmit
 470              	.LVL29:
 471 0096 EDE7     		b	.L22
 472              	.L29:
 473              	.LBE7:
 106:Src/main.c    ****      if (HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_6)==GPIO_PIN_SET)
 474              		.loc 1 106 6 view .LVU120
 475 0098 1E23     		movs	r3, #30
 476 009a 0922     		movs	r2, #9
 477 009c 2249     		ldr	r1, .L32+28
 478 009e 1C48     		ldr	r0, .L32+4
 479 00a0 FFF7FEFF 		bl	HAL_UART_Transmit
 480              	.LVL30:
 107:Src/main.c    ****      {
 481              		.loc 1 107 6 view .LVU121
 107:Src/main.c    ****      {
 482              		.loc 1 107 10 is_stmt 0 view .LVU122
 483 00a4 4021     		movs	r1, #64
 484 00a6 1F48     		ldr	r0, .L32+24
 485 00a8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 486              	.LVL31:
 107:Src/main.c    ****      {
 487              		.loc 1 107 9 view .LVU123
 488 00ac 0128     		cmp	r0, #1
 489 00ae 1ED0     		beq	.L30
 111:Src/main.c    ****      }
 490              		.loc 1 111 8 is_stmt 1 view .LVU124
 491 00b0 1E23     		movs	r3, #30
 492 00b2 0322     		movs	r2, #3
 493 00b4 1D49     		ldr	r1, .L32+32
 494 00b6 1648     		ldr	r0, .L32+4
 495 00b8 FFF7FEFF 		bl	HAL_UART_Transmit
 496              	.LVL32:
 497              	.L25:
 113:Src/main.c    ****      if (HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_5)==GPIO_PIN_SET)
 498              		.loc 1 113 7 view .LVU125
 499 00bc 1E23     		movs	r3, #30
 500 00be 0722     		movs	r2, #7
 501 00c0 1B49     		ldr	r1, .L32+36
 502 00c2 1348     		ldr	r0, .L32+4
 503 00c4 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccdp43tV.s 			page 17


 504              	.LVL33:
 114:Src/main.c    ****        {
 505              		.loc 1 114 6 view .LVU126
 114:Src/main.c    ****        {
 506              		.loc 1 114 10 is_stmt 0 view .LVU127
 507 00c8 2021     		movs	r1, #32
 508 00ca 1648     		ldr	r0, .L32+24
 509 00cc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 510              	.LVL34:
 114:Src/main.c    ****        {
 511              		.loc 1 114 9 view .LVU128
 512 00d0 0128     		cmp	r0, #1
 513 00d2 13D0     		beq	.L31
 118:Src/main.c    ****        }
 514              		.loc 1 118 9 is_stmt 1 view .LVU129
 515 00d4 1E23     		movs	r3, #30
 516 00d6 0322     		movs	r2, #3
 517 00d8 1449     		ldr	r1, .L32+32
 518 00da 0D48     		ldr	r0, .L32+4
 519 00dc FFF7FEFF 		bl	HAL_UART_Transmit
 520              	.LVL35:
 521              	.L27:
 120:Src/main.c    **** 
 522              		.loc 1 120 6 view .LVU130
 523 00e0 1E23     		movs	r3, #30
 524 00e2 0322     		movs	r2, #3
 525 00e4 1349     		ldr	r1, .L32+40
 526 00e6 0A48     		ldr	r0, .L32+4
 527 00e8 FFF7FEFF 		bl	HAL_UART_Transmit
 528              	.LVL36:
 122:Src/main.c    **** 
 529              		.loc 1 122 1 is_stmt 0 view .LVU131
 530              		@ sp needed
 531              	.LVL37:
 532              	.LVL38:
 122:Src/main.c    **** 
 533              		.loc 1 122 1 view .LVU132
 534 00ec 70BD     		pop	{r4, r5, r6, pc}
 535              	.LVL39:
 536              	.L30:
 109:Src/main.c    ****      }else{
 537              		.loc 1 109 8 is_stmt 1 view .LVU133
 538 00ee 1E23     		movs	r3, #30
 539 00f0 0222     		movs	r2, #2
 540 00f2 1149     		ldr	r1, .L32+44
 541 00f4 0648     		ldr	r0, .L32+4
 542 00f6 FFF7FEFF 		bl	HAL_UART_Transmit
 543              	.LVL40:
 544 00fa DFE7     		b	.L25
 545              	.L31:
 116:Src/main.c    ****        }else{
 546              		.loc 1 116 9 view .LVU134
 547 00fc 1E23     		movs	r3, #30
 548 00fe 0222     		movs	r2, #2
 549 0100 0D49     		ldr	r1, .L32+44
 550 0102 0348     		ldr	r0, .L32+4
 551 0104 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccdp43tV.s 			page 18


 552              	.LVL41:
 553 0108 EAE7     		b	.L27
 554              	.L33:
 555 010a C046     		.align	2
 556              	.L32:
 557 010c 00000000 		.word	.LANCHOR1
 558 0110 00000000 		.word	huart1
 559 0114 00000000 		.word	.LANCHOR3
 560 0118 00000000 		.word	.LANCHOR2
 561 011c 00000000 		.word	.LC9
 562 0120 00000000 		.word	.LANCHOR4
 563 0124 00040048 		.word	1207960576
 564 0128 04000000 		.word	.LC12
 565 012c 14000000 		.word	.LC16
 566 0130 18000000 		.word	.LC18
 567 0134 20000000 		.word	.LC20
 568 0138 10000000 		.word	.LC14
 569              		.cfi_endproc
 570              	.LFE38:
 572              		.section	.text.SystemClock_Config,"ax",%progbits
 573              		.align	1
 574              		.global	SystemClock_Config
 575              		.syntax unified
 576              		.code	16
 577              		.thumb_func
 578              		.fpu softvfp
 580              	SystemClock_Config:
 581              	.LFB40:
 188:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 582              		.loc 1 188 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 88
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 30B5     		push	{r4, r5, lr}
 587              	.LCFI6:
 588              		.cfi_def_cfa_offset 12
 589              		.cfi_offset 4, -12
 590              		.cfi_offset 5, -8
 591              		.cfi_offset 14, -4
 592 0002 97B0     		sub	sp, sp, #92
 593              	.LCFI7:
 594              		.cfi_def_cfa_offset 104
 189:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 595              		.loc 1 189 3 view .LVU136
 189:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 596              		.loc 1 189 22 is_stmt 0 view .LVU137
 597 0004 2C22     		movs	r2, #44
 598 0006 0021     		movs	r1, #0
 599 0008 0BA8     		add	r0, sp, #44
 600 000a FFF7FEFF 		bl	memset
 601              	.LVL42:
 190:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 602              		.loc 1 190 3 is_stmt 1 view .LVU138
 190:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 603              		.loc 1 190 22 is_stmt 0 view .LVU139
 604 000e 1022     		movs	r2, #16
 605 0010 0021     		movs	r1, #0
ARM GAS  /tmp/ccdp43tV.s 			page 19


 606 0012 06A8     		add	r0, sp, #24
 607 0014 FFF7FEFF 		bl	memset
 608              	.LVL43:
 191:Src/main.c    **** 
 609              		.loc 1 191 3 is_stmt 1 view .LVU140
 191:Src/main.c    **** 
 610              		.loc 1 191 28 is_stmt 0 view .LVU141
 611 0018 1422     		movs	r2, #20
 612 001a 0021     		movs	r1, #0
 613 001c 01A8     		add	r0, sp, #4
 614 001e FFF7FEFF 		bl	memset
 615              	.LVL44:
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 616              		.loc 1 195 3 is_stmt 1 view .LVU142
 195:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 617              		.loc 1 195 36 is_stmt 0 view .LVU143
 618 0022 0223     		movs	r3, #2
 619 0024 0A93     		str	r3, [sp, #40]
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 620              		.loc 1 196 3 is_stmt 1 view .LVU144
 196:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 621              		.loc 1 196 30 is_stmt 0 view .LVU145
 622 0026 0125     		movs	r5, #1
 623 0028 0D95     		str	r5, [sp, #52]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 624              		.loc 1 197 3 is_stmt 1 view .LVU146
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 625              		.loc 1 197 41 is_stmt 0 view .LVU147
 626 002a 0E33     		adds	r3, r3, #14
 627 002c 0E93     		str	r3, [sp, #56]
 198:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 628              		.loc 1 198 3 is_stmt 1 view .LVU148
 199:Src/main.c    ****   {
 629              		.loc 1 199 3 view .LVU149
 199:Src/main.c    ****   {
 630              		.loc 1 199 7 is_stmt 0 view .LVU150
 631 002e 0AA8     		add	r0, sp, #40
 632 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 633              	.LVL45:
 205:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 634              		.loc 1 205 3 is_stmt 1 view .LVU151
 205:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 635              		.loc 1 205 31 is_stmt 0 view .LVU152
 636 0034 0723     		movs	r3, #7
 637 0036 0693     		str	r3, [sp, #24]
 207:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 638              		.loc 1 207 3 is_stmt 1 view .LVU153
 207:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 639              		.loc 1 207 34 is_stmt 0 view .LVU154
 640 0038 0024     		movs	r4, #0
 641 003a 0794     		str	r4, [sp, #28]
 208:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 642              		.loc 1 208 3 is_stmt 1 view .LVU155
 208:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 643              		.loc 1 208 35 is_stmt 0 view .LVU156
 644 003c 0894     		str	r4, [sp, #32]
 209:Src/main.c    **** 
ARM GAS  /tmp/ccdp43tV.s 			page 20


 645              		.loc 1 209 3 is_stmt 1 view .LVU157
 209:Src/main.c    **** 
 646              		.loc 1 209 36 is_stmt 0 view .LVU158
 647 003e 0994     		str	r4, [sp, #36]
 211:Src/main.c    ****   {
 648              		.loc 1 211 3 is_stmt 1 view .LVU159
 211:Src/main.c    ****   {
 649              		.loc 1 211 7 is_stmt 0 view .LVU160
 650 0040 0021     		movs	r1, #0
 651 0042 06A8     		add	r0, sp, #24
 652 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 653              	.LVL46:
 215:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 654              		.loc 1 215 3 is_stmt 1 view .LVU161
 215:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 655              		.loc 1 215 38 is_stmt 0 view .LVU162
 656 0048 0195     		str	r5, [sp, #4]
 216:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 657              		.loc 1 216 3 is_stmt 1 view .LVU163
 216:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 658              		.loc 1 216 38 is_stmt 0 view .LVU164
 659 004a 0394     		str	r4, [sp, #12]
 217:Src/main.c    ****   {
 660              		.loc 1 217 3 is_stmt 1 view .LVU165
 217:Src/main.c    ****   {
 661              		.loc 1 217 7 is_stmt 0 view .LVU166
 662 004c 01A8     		add	r0, sp, #4
 663 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 664              	.LVL47:
 221:Src/main.c    **** 
 665              		.loc 1 221 1 view .LVU167
 666 0052 17B0     		add	sp, sp, #92
 667              		@ sp needed
 668 0054 30BD     		pop	{r4, r5, pc}
 669              		.cfi_endproc
 670              	.LFE40:
 672              		.section	.text.main,"ax",%progbits
 673              		.align	1
 674              		.global	main
 675              		.syntax unified
 676              		.code	16
 677              		.thumb_func
 678              		.fpu softvfp
 680              	main:
 681              	.LFB39:
 131:Src/main.c    ****   /* USER CODE BEGIN 1 */
 682              		.loc 1 131 1 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ Volatile: function does not return.
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687 0000 10B5     		push	{r4, lr}
 688              	.LCFI8:
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 4, -8
 691              		.cfi_offset 14, -4
 140:Src/main.c    **** 
ARM GAS  /tmp/ccdp43tV.s 			page 21


 692              		.loc 1 140 3 view .LVU169
 693 0002 FFF7FEFF 		bl	HAL_Init
 694              	.LVL48:
 147:Src/main.c    **** 
 695              		.loc 1 147 3 view .LVU170
 696 0006 FFF7FEFF 		bl	SystemClock_Config
 697              	.LVL49:
 154:Src/main.c    ****   MX_USART1_UART_Init();
 698              		.loc 1 154 3 view .LVU171
 699 000a FFF7FEFF 		bl	MX_GPIO_Init
 700              	.LVL50:
 155:Src/main.c    ****   MX_USART2_UART_Init();
 701              		.loc 1 155 3 view .LVU172
 702 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 703              	.LVL51:
 156:Src/main.c    ****   /* USER CODE BEGIN 2 */
 704              		.loc 1 156 3 view .LVU173
 705 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 706              	.LVL52:
 158:Src/main.c    ****   HAL_NVIC_SetPriority(USART1_IRQn, 0, 1);
 707              		.loc 1 158 3 view .LVU174
 708 0016 0422     		movs	r2, #4
 709 0018 1649     		ldr	r1, .L39
 710 001a 1748     		ldr	r0, .L39+4
 711 001c FFF7FEFF 		bl	HAL_UART_Receive_IT
 712              	.LVL53:
 159:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART1_IRQn);
 713              		.loc 1 159 3 view .LVU175
 714 0020 0122     		movs	r2, #1
 715 0022 0021     		movs	r1, #0
 716 0024 1B20     		movs	r0, #27
 717 0026 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 718              	.LVL54:
 160:Src/main.c    ****   /* USER CODE END 2 */
 719              		.loc 1 160 3 view .LVU176
 720 002a 1B20     		movs	r0, #27
 721 002c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 722              	.LVL55:
 723 0030 11E0     		b	.L38
 724              	.L36:
 171:Src/main.c    ****       if(state==HAL_OK){
 725              		.loc 1 171 7 view .LVU177
 171:Src/main.c    ****       if(state==HAL_OK){
 726              		.loc 1 171 13 is_stmt 0 view .LVU178
 727 0032 6423     		movs	r3, #100
 728 0034 0622     		movs	r2, #6
 729 0036 1149     		ldr	r1, .L39+8
 730 0038 1148     		ldr	r0, .L39+12
 731 003a FFF7FEFF 		bl	HAL_UART_Transmit
 732              	.LVL56:
 171:Src/main.c    ****       if(state==HAL_OK){
 733              		.loc 1 171 12 view .LVU179
 734 003e 114B     		ldr	r3, .L39+16
 735 0040 1870     		strb	r0, [r3]
 172:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_5);
 736              		.loc 1 172 7 is_stmt 1 view .LVU180
 172:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_5);
ARM GAS  /tmp/ccdp43tV.s 			page 22


 737              		.loc 1 172 9 is_stmt 0 view .LVU181
 738 0042 0028     		cmp	r0, #0
 739 0044 03D1     		bne	.L37
 173:Src/main.c    ****       }
 740              		.loc 1 173 11 is_stmt 1 view .LVU182
 741 0046 2021     		movs	r1, #32
 742 0048 0F48     		ldr	r0, .L39+20
 743 004a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 744              	.LVL57:
 745              	.L37:
 175:Src/main.c    ****     /* USER CODE END WHILE */
 746              		.loc 1 175 7 view .LVU183
 747 004e FA20     		movs	r0, #250
 748 0050 8000     		lsls	r0, r0, #2
 749 0052 FFF7FEFF 		bl	HAL_Delay
 750              	.LVL58:
 751              	.L38:
 165:Src/main.c    ****   {
 752              		.loc 1 165 3 view .LVU184
 167:Src/main.c    ****         test();
 753              		.loc 1 167 7 view .LVU185
 167:Src/main.c    ****         test();
 754              		.loc 1 167 16 is_stmt 0 view .LVU186
 755 0056 0D4B     		ldr	r3, .L39+24
 756 0058 1B78     		ldrb	r3, [r3]
 167:Src/main.c    ****         test();
 757              		.loc 1 167 9 view .LVU187
 758 005a 012B     		cmp	r3, #1
 759 005c E9D1     		bne	.L36
 167:Src/main.c    ****         test();
 760              		.loc 1 167 31 discriminator 1 view .LVU188
 761 005e 054B     		ldr	r3, .L39
 762 0060 1B78     		ldrb	r3, [r3]
 167:Src/main.c    ****         test();
 763              		.loc 1 167 20 discriminator 1 view .LVU189
 764 0062 742B     		cmp	r3, #116
 765 0064 E5D1     		bne	.L36
 168:Src/main.c    ****         received[0]=0;
 766              		.loc 1 168 9 is_stmt 1 view .LVU190
 767 0066 FFF7FEFF 		bl	test
 768              	.LVL59:
 169:Src/main.c    ****       }
 769              		.loc 1 169 9 view .LVU191
 169:Src/main.c    ****       }
 770              		.loc 1 169 20 is_stmt 0 view .LVU192
 771 006a 024B     		ldr	r3, .L39
 772 006c 0022     		movs	r2, #0
 773 006e 1A70     		strb	r2, [r3]
 774 0070 DFE7     		b	.L36
 775              	.L40:
 776 0072 C046     		.align	2
 777              	.L39:
 778 0074 00000000 		.word	received
 779 0078 00000000 		.word	huart1
 780 007c 00000000 		.word	.LC25
 781 0080 00000000 		.word	huart2
 782 0084 00000000 		.word	state
ARM GAS  /tmp/ccdp43tV.s 			page 23


 783 0088 00040048 		.word	1207960576
 784 008c 00000000 		.word	.LANCHOR0
 785              		.cfi_endproc
 786              	.LFE39:
 788              		.section	.text.Error_Handler,"ax",%progbits
 789              		.align	1
 790              		.global	Error_Handler
 791              		.syntax unified
 792              		.code	16
 793              		.thumb_func
 794              		.fpu softvfp
 796              	Error_Handler:
 797              	.LFB44:
 317:Src/main.c    **** 
 318:Src/main.c    **** /* USER CODE BEGIN 4 */
 319:Src/main.c    **** 
 320:Src/main.c    **** /* USER CODE END 4 */
 321:Src/main.c    **** 
 322:Src/main.c    **** /**
 323:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 324:Src/main.c    ****   * @retval None
 325:Src/main.c    ****   */
 326:Src/main.c    **** void Error_Handler(void)
 327:Src/main.c    **** {
 798              		.loc 1 327 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 328:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 329:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 332:Src/main.c    **** }
 803              		.loc 1 332 1 view .LVU194
 804              		@ sp needed
 805 0000 7047     		bx	lr
 806              		.cfi_endproc
 807              	.LFE44:
 809              		.global	str
 810              		.global	status
 811              		.comm	received,4,4
 812              		.comm	state,1,1
 813              		.comm	huart2,112,4
 814              		.comm	huart1,112,4
 815              		.section	.bss.status,"aw",%nobits
 816              		.set	.LANCHOR0,. + 0
 819              	status:
 820 0000 00       		.space	1
 821              		.section	.data.close,"aw"
 822              		.align	2
 823              		.set	.LANCHOR3,. + 0
 826              	close:
 827 0000 63202020 		.ascii	"c    \000"
 827      2000
 828              		.section	.data.header,"aw"
 829              		.align	2
ARM GAS  /tmp/ccdp43tV.s 			page 24


 830              		.set	.LANCHOR1,. + 0
 833              	header:
 834 0000 50413420 		.ascii	"PA4  PA5  PA6  PA7\015\012\000"
 834      20504135 
 834      20205041 
 834      36202050 
 834      41370D0A 
 835              		.section	.data.headerb,"aw"
 836              		.align	2
 837              		.set	.LANCHOR4,. + 0
 840              	headerb:
 841 0000 50423132 		.ascii	"PB12 PB13 PB14 PB15\015\012\000"
 841      20504231 
 841      33205042 
 841      31342050 
 841      4231350D 
 842              		.section	.data.open,"aw"
 843              		.align	2
 844              		.set	.LANCHOR2,. + 0
 847              	open:
 848 0000 6F202020 		.ascii	"o    \000"
 848      2000
 849              		.section	.data.str,"aw"
 850              		.align	2
 853              	str:
 854 0000 75737274 		.ascii	"usrt\000"
 854      00
 855              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 856              		.align	2
 857              	.LC25:
 858 0000 74657374 		.ascii	"test\015\012\000"
 858      0D0A00
 859              		.section	.rodata.test.str1.4,"aMS",%progbits,1
 860              		.align	2
 861              	.LC9:
 862 0000 0D0A00   		.ascii	"\015\012\000"
 863 0003 00       		.space	1
 864              	.LC12:
 865 0004 0D0A4772 		.ascii	"\015\012Green: \000"
 865      65656E3A 
 865      2000
 866 000e 0000     		.space	2
 867              	.LC14:
 868 0010 6F6E00   		.ascii	"on\000"
 869 0013 00       		.space	1
 870              	.LC16:
 871 0014 6F666600 		.ascii	"off\000"
 872              	.LC18:
 873 0018 0D0A5265 		.ascii	"\015\012Red: \000"
 873      643A2000 
 874              	.LC20:
 875 0020 0D0A0A00 		.ascii	"\015\012\012\000"
 876              		.text
 877              	.Letext0:
 878              		.file 2 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types.h"
 879              		.file 3 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 880              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
ARM GAS  /tmp/ccdp43tV.s 			page 25


 881              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f070x6.h"
 882              		.file 6 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 883              		.file 7 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 884              		.file 8 "/opt/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 885              		.file 9 "/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 886              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 887              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 888              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 889              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 890              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 891              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 892              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart_ex.h"
 893              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 894              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 895              		.file 19 "<built-in>"
ARM GAS  /tmp/ccdp43tV.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccdp43tV.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccdp43tV.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccdp43tV.s:112    .text.MX_GPIO_Init:000000000000005c $d
     /tmp/ccdp43tV.s:118    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccdp43tV.s:124    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccdp43tV.s:181    .text.MX_USART1_UART_Init:0000000000000028 $d
                            *COM*:0000000000000070 huart1
     /tmp/ccdp43tV.s:187    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccdp43tV.s:193    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccdp43tV.s:252    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000070 huart2
     /tmp/ccdp43tV.s:258    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccdp43tV.s:265    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccdp43tV.s:308    .text.HAL_UART_RxCpltCallback:000000000000001c $d
                            *COM*:0000000000000004 received
     /tmp/ccdp43tV.s:315    .text.test:0000000000000000 $t
     /tmp/ccdp43tV.s:322    .text.test:0000000000000000 test
     /tmp/ccdp43tV.s:557    .text.test:000000000000010c $d
     /tmp/ccdp43tV.s:573    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccdp43tV.s:580    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccdp43tV.s:673    .text.main:0000000000000000 $t
     /tmp/ccdp43tV.s:680    .text.main:0000000000000000 main
     /tmp/ccdp43tV.s:778    .text.main:0000000000000074 $d
                            *COM*:0000000000000001 state
     /tmp/ccdp43tV.s:789    .text.Error_Handler:0000000000000000 $t
     /tmp/ccdp43tV.s:796    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccdp43tV.s:853    .data.str:0000000000000000 str
     /tmp/ccdp43tV.s:819    .bss.status:0000000000000000 status
     /tmp/ccdp43tV.s:820    .bss.status:0000000000000000 $d
     /tmp/ccdp43tV.s:822    .data.close:0000000000000000 $d
     /tmp/ccdp43tV.s:826    .data.close:0000000000000000 close
     /tmp/ccdp43tV.s:829    .data.header:0000000000000000 $d
     /tmp/ccdp43tV.s:833    .data.header:0000000000000000 header
     /tmp/ccdp43tV.s:836    .data.headerb:0000000000000000 $d
     /tmp/ccdp43tV.s:840    .data.headerb:0000000000000000 headerb
     /tmp/ccdp43tV.s:843    .data.open:0000000000000000 $d
     /tmp/ccdp43tV.s:847    .data.open:0000000000000000 open
     /tmp/ccdp43tV.s:850    .data.str:0000000000000000 $d
     /tmp/ccdp43tV.s:856    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccdp43tV.s:860    .rodata.test.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_RS485Ex_Init
HAL_UART_Receive_IT
HAL_UART_Transmit
HAL_GPIO_ReadPin
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_NVIC_SetPriority
ARM GAS  /tmp/ccdp43tV.s 			page 27


HAL_NVIC_EnableIRQ
HAL_GPIO_TogglePin
HAL_Delay
